% Wing max lift
function [alpha_deg, L_wing_max] = Max_Lift(N, alpha_stall_w)

% N is the number of segments that the wing is split into

%% Lifting line theory

% twist angle is zero (deg)
alpha_0_h = -4.2; % zero lift angle of attack (deg)

% Calculate the lift curve slope

C_l_alpha_w = 0.1; % NACA 4418 lift curve slope (1/degrees)

% convert to per radian

C_l_alpha_w = C_l_alpha_w*(180/pi); % NACA 4418 lift curve slope (1/radian)

C_L_alpha_w = C_l_alpha_w/(1-(C_l_alpha_w/(pi*7))); %  lift curve slope (1/radian)


theta = pi/(2*N):pi/(2*N):pi/2;
alpha = alpha_stall_w; % segments angle of attack (deg)
% segmentâ€™s angle of attack
z = (2.27199/2)*cos(theta);
c = 0.32151 * (1 - (1-0.4)*cos(theta)); % Mean Aerodynamics Chord at each segment (m)
mu = c * C_L_alpha_w / (4 * 2.27199);
LHS = mu .* (alpha-alpha_0_h)/57.3; % Left Hand Side
% Solving N equations to find coefficients A(i):
for i=1:N
    for j=1:N
        B(i,j) = sin((2*j-1) * theta(i)) * (1 + (mu(i) * (2*j-1)) /sin(theta(i)));
    end
end
A=B\transpose(LHS);
for i = 1:N
    sum1(i) = 0;
    sum2(i) = 0;
    for j=1:N
        sum1(i) = sum1(i) + (2*j-1) * A(j)*sin((2*j-1)*theta(i));
        sum2(i) = sum2(i) + A(j)*sin((2*j-1)*theta(i));
    end
end
CL = 4*2.27199*sum2 ./ c;
CL1=[0 CL(1) CL(2) CL(3) CL(4) CL(5) CL(6) CL(7) CL(8) CL(9)];
y_s=[2.27199/2 z(1) z(2) z(3) z(4) z(5) z(6) z(7) z(8) z(9)];
plot(y_s,CL1,'-o')
grid
title('Wing max lift distribution')
xlabel('Semi-span location (m)')
ylabel ('Lift coefficient')
CL_wing_max = pi * 7 * A(1);

fprintf('The lifting theory wing max lift coefficient is %f\n', CL_wing_max);

% Max lift generated by wing

rho = 1.225; % air density (kg/m^3)
V = 89.408; % velocity (m/s)

L_wing_max = 0.5 * rho * V^2 * 0.7374 * CL_wing_max;

fprintf('The max lift generated by the wing is %f N\n', L_wing_max);

% Find pitch at which max lift = 9gM

M = 93.19; % mass of aircraft (kg)
g = 9.81; % acceleration due to gravity (m/s^2)

load = 9 * M * g;

if load <= L_wing_max
else
    load = L_wing_max;
end

% Define the function for lift in terms of degrees
f = @(alpha_deg) calculate_lift(alpha_deg, rho, V, load, N, mu, theta, LHS, M, g, alpha_0_h);

% Define the initial guess for fzero
alpha0 = 5;  % Adjust this value

% Use fzero to find the root
alpha_deg = fzero(f, alpha0);

% Calculate the lift at the root using alpha in degrees
L_wing_max = calculate_lift(alpha_deg, rho, V, 0, N, mu, theta, LHS, M, g, alpha_0_h);

fprintf('The value of alpha where the total lift generated equals the load or the max lift is produced is %f degrees\n', alpha_deg);
fprintf('The lift generated by the wing is %f N\n', L_wing_max);

